{
  "hash": "667fd2905333f02e155cf6c505717ab4",
  "result": {
    "markdown": "::: {.content-hidden unless-format=\"html\"}\n$$\n\\newcommand{\\tr}{\\mathrm{tr}}\n\\newcommand{\\rank}{\\mathrm{rank}}\n\\newcommand{\\plim}{\\operatornamewithlimits{plim}}\n\\newcommand{\\diag}{\\mathrm{diag}}\n\\newcommand{\\bm}[1]{\\boldsymbol{\\mathbf{#1}}}\n\\newcommand{\\Var}{\\mathrm{Var}}\n\\newcommand{\\Exp}{\\mathrm{E}}\n\\newcommand{\\Cov}{\\mathrm{Cov}}\n\\newcommand\\given[1][]{\\:#1\\vert\\:}\n\\newcommand{\\irow}[1]{%\n\\begin{pmatrix}#1\\end{pmatrix}\n}\n$$\n:::\n\n# Spatio-temporal models\n\n\n### Required packages {.unnumbered}\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-1_2f6f9dad76614cd2f163e5e2d457de89'}\n\n```{.r .cell-code}\npkgs <- c(\"sf\", \"mapview\", \"spdep\", \"spatialreg\", \"tmap\", \"viridisLite\", \n          \"plm\", \"splm\", \"SDPDmod\")\nlapply(pkgs, require, character.only = TRUE)\n```\n:::\n\n\n### Session info {.unnumbered}\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-2_d4fc79ca7ef47036b0963cf31e1c5e7c'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United Kingdom.utf8 \n[2] LC_CTYPE=English_United Kingdom.utf8   \n[3] LC_MONETARY=English_United Kingdom.utf8\n[4] LC_NUMERIC=C                           \n[5] LC_TIME=English_United Kingdom.utf8    \n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods  \n[7] base     \n\nother attached packages:\n [1] SDPDmod_0.0.5     splm_1.6-5        plm_2.6-4        \n [4] viridisLite_0.4.2 tmap_3.3-4        spatialreg_1.3-4 \n [7] Matrix_1.7-0      spdep_1.3-5       spData_2.3.1     \n[10] mapview_2.11.2    sf_1.0-16        \n\nloaded via a namespace (and not attached):\n [1] fastmap_1.2.0       leaflet_2.2.2       TH.data_1.1-2      \n [4] dotCall64_1.1-1     fixest_0.12.1       XML_3.99-0.16.1    \n [7] digest_0.6.35       lifecycle_1.0.4     dreamerr_1.4.0     \n[10] LearnBayes_2.15.1   survival_3.6-4      terra_1.7-78       \n[13] magrittr_2.0.3      compiler_4.4.1      rlang_1.1.4        \n[16] tools_4.4.1         collapse_2.0.14     knitr_1.47         \n[19] htmlwidgets_1.6.4   sp_2.1-4            classInt_0.4-10    \n[22] RColorBrewer_1.1-3  multcomp_1.4-25     abind_1.4-5        \n[25] KernSmooth_2.23-24  numDeriv_2016.8-1.1 leafsync_0.1.0     \n[28] grid_4.4.1          stats4_4.4.1        xtable_1.8-4       \n[31] lfe_3.0-0           e1071_1.7-14        leafem_0.2.3       \n[34] colorspace_2.1-0    scales_1.3.0        MASS_7.3-60.2      \n[37] dichromat_2.0-0.1   cli_3.6.2           mvtnorm_1.2-5      \n[40] rmarkdown_2.27      miscTools_0.6-28    generics_0.1.3     \n[43] RSpectra_0.16-1     rstudioapi_0.16.0   tmaptools_3.1-1    \n[46] bdsmatrix_1.3-7     DBI_1.2.3           proxy_0.4-27       \n[49] stringr_1.5.1       splines_4.4.1       stars_0.6-5        \n[52] parallel_4.4.1      s2_1.1.6            stringmagic_1.1.2  \n[55] base64enc_0.1-3     boot_1.3-30         sandwich_3.1-0     \n[58] jsonlite_1.8.8      Formula_1.2-5       crosstalk_1.2.1    \n[61] units_0.8-5         spam_2.10-0         glue_1.7.0         \n[64] lwgeom_0.2-14       codetools_0.2-20    stringi_1.8.4      \n[67] deldir_2.0-4        raster_3.6-26       lmtest_0.9-40      \n[70] munsell_0.5.1       htmltools_0.5.8.1   satellite_1.0.5    \n[73] R6_2.5.1            wk_0.9.1            maxLik_1.5-2.1     \n[76] Rdpack_2.6          evaluate_0.24.0     lattice_0.22-6     \n[79] rbibutils_2.2.16    png_0.1-8           class_7.3-22       \n[82] Rcpp_1.0.12         coda_0.19-4.1       nlme_3.1-164       \n[85] xfun_0.45           zoo_1.8-12         \n```\n:::\n:::\n\n\n\n@Elhorst.2014 provides a comprehensive introduction to spatial panel data methods. Article length introduction to spatial panel data models (FE and RE) can be found in @Elhorst.2012, @Millo.2012 and @Croissant.2018. @LeSage.2014b discusses Bayesian panel data methods.\n\nNote that we will only discuss some basics here, as the complete econometrics of these models and their estimation strategy become insanely complicated [@Lee.2010].\n\n## Static panel data models\n\nThe idea behind a static panel data with auto-regressive term is similar to the cross sectional situation [@Millo.2012].\n\n\n$$\n\t\t{\\bm y}= \\rho(\\bm I_T\\otimes {\\bm W_N}){\\bm y}+{\\bm X}{\\bm \\beta}+ {\\bm u}.\n$$\t\n\nwhere $\\otimes$ is the Kronecker product (block-wise multiplication).\n\n$$\n\\begin{split}\n\\underbrace{\\underbrace{\\bm I_T}_{T \\times T} \\otimes \\underbrace{\\bm W_N}_{N \\times N}}_{NT \\times NT}=\n\\begin{pmatrix}\n      1 & 0 & \\cdots & 0  \\\\\n      0 & 1 & \\cdots & 0  \\\\\n      \\vdots & \\vdots & \\ddots & \\vdots \\\\\n      0 & 0 & \\cdots & 1\n\\end{pmatrix}\n\\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right] =\\\\\n\\begin{pmatrix}\n      \\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right] & 0 & \\cdots & 0  \\\\\n      0 & \\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right] & \\cdots & 0  \\\\\n      \\vdots & \\vdots & \\ddots & \\vdots \\\\\n      0 & 0 & \\cdots & \\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right]\n\\end{pmatrix}\n\\end{split}\n$$\n\nHere we model only spatial dependence within each cross-section and multiply the same spatial weights matrix $T$ times. Off block-diagonal elements are all zero. So there is no spatial dependence that goes across time.\n\nThe error term can be decomposed into two parts:\n\n$$\n\t\t{\\bm u}= (\\bm \\iota_T \\otimes {\\bm I_N})\\bm \\mu+ {\\bm \\nu},\n$$\n\nwhere $\\bm \\iota_T$ is a $T \\times 1$ vector of ones, ${\\bm I_N}$ an $N \\times N$ identity matrix, $\\bm \\mu$ is a vector of time-invariant individual specific effects (not spatially autocorrelated).\n\nWe could obviously extent the specification to allow for error correlation by specifying\n\n$$\n\t\t{\\bm \\nu}= \\lambda(\\bm I_T \\otimes {\\bm W_N})\\bm \\nu + {\\bm \\varepsilon}.\n$$\n\nThe individual effects can be treated as fixed or random.\n\n__Fixed Effects__\n\nIn the FE model, the individual specific effects are treated as fixed. If we re-write the equation above, we derive at the well-know fixed effects formula with an additional spatial autoregressive term: \n\n$$\n\t\t{y_{it}}= \\rho\\sum_{j=1}^Nw_{ij}y_{jt} + \\bm x_{it}\\bm\\beta + \\mu_i + \\nu_{it},\n$$\nwhere $\\mu_i$ denote the individual-specific fixed effects.\n\nAs with the standard spatial lag model, we cannot rely on the OLS estimator because of the simultaneity problem. The coefficients are thus estimated by maximum likelihood [@Elhorst.2014].\n\n__Random Effects__\n\nIn the RE model, the individual specific effects are treated as components of the error $\\mu \\sim \\mathrm{IID}(o, \\sigma_\\mu^2)$. The model can then be written as\n\n$$\n\\begin{split}\n\t\t{\\bm y}= \\rho(\\bm I_T\\otimes {\\bm W_N}){\\bm y}+{\\bm X}{\\bm \\beta}+ {\\bm u}, \\\\\n\t\t{\\bm u}= (\\bm \\iota_T \\otimes {\\bm I_N})\\bm \\mu+ [\\bm I_T \\otimes (\\bm I_N -  \\lambda{\\bm W_N})]^{-1} {\\bm \\varepsilon}.\n\\end{split}\t\t\n$$\t\n\nAs with the conventional random effects model, we make the strong assumption that the unobserved individual\neffects are uncorrelated with the covariates $\\bm X$ in the model.\n\n## Dynamic panel data models\n\nRelying on panel data and repeated measures over time, comes with an additional layer of dependence / autocorrelation between units. We have spatial dependence (with its three potential sources), and we have temporal/serial dependence within each unit over time.\n\nA general dynamic model would account for all sources of potential dependence, including combinations [@Elhorst.2012]. The most general model can be written as:\n\n$$\n\\begin{split}\n\t\t{\\bm y_t}=& \\tau \\bm y_{t-1} + \\rho(\\bm I_T\\otimes {\\bm W_N}){\\bm y}_t\n\t\t+ \\gamma(\\bm I_T\\otimes {\\bm W_N}){\\bm y_{t-1}}\\\\\n\t\t&~+ {\\bm X}{\\bm \\beta}+ (\\bm I_T\\otimes {\\bm W_N}){\\bm X}{\\bm \\theta}+ {\\bm u}_t,\\\\\n\t\t{\\bm u_t}=&  + (\\bm \\iota_T \\otimes {\\bm I_N})\\bm \\mu+ {\\bm \\nu_t},\\\\\n\t\t{\\bm \\nu_t}=& \\psi{\\bm \\nu}_{t-1} + \\lambda(\\bm I_T \\otimes {\\bm W_N})\\bm \\nu + {\\bm \\varepsilon},\n\\end{split}\t\t\n$$\t\n\nWhere ${\\bm X}$ could further contain time-lagged covariates. Compared to the static spatial panel model, we have introduced temporal dependency in the outcome $\\tau \\bm y_{t-1}$ and the spatially lagged outcome $\\gamma(\\bm I_T\\otimes {\\bm W_N}){\\bm y_{t-1}}$, and in the error term $\\psi{\\bm \\nu}_{t-1}$.\n\n### Impacts in spatial panel models\n\nNote that similar to the distinction between local and global spillovers, we now have to distinguish between short-term and long-term effects. A change in $\\bm X_t$ no influences focal $Y$ and neighbour's $Y$ but also contemporaneous $Y$ and future $Y$.\n\nWhile the short-term effects are the known impacts\n\n$$\n\\frac{\\partial {\\bm y}}{\\partial {\\bm x}_k} = ({\\bm I}-\\rho{\\bm W_{NT}})^{-1}\\left[\\beta_k+{\\bm W_{NT}}\\theta_k\\right].\n$$\n\nThe long-term impacts, by contrast, additionally account for the effect multiplying through time  \n\n$$\n\\frac{\\partial {\\bm y}}{\\partial {\\bm x}_k} = [(1-\\tau){\\bm I}-(\\rho+\\gamma){\\bm W_{NT}}]^{-1}\\left[\\beta_k+{\\bm W_{NT}}\\theta_k\\right].\n$$\n\nFor more information see @Elhorst.2012.\n\n![Summary impact measures in dynamic spatial panel models [@Elhorst.2012]](fig/Elhorst_panel.PNG)\n\n## Example: Local employment impacts of immigration\n\n@Fingleton.2020: Estimating the local employment impacts of immigration: A dynamic spatial panel model. Urban Studies, 57(13), 2646–2662. https://doi.org/10.1177/0042098019887916\n\n_This paper highlights a number of important gaps in the UK evidence base on the employment impacts of immigration, namely: (1) the lack of research on the local impacts of immigration – existing studies only estimate the impact for the country as a whole; (2) the absence of long-term estimates – research has focused on relatively short time spans – there are no estimates of the impact over several decades, for example; (3) the tendency to ignore spatial dependence of employment which can bias the results and distort inference – there are no robust spatial econometric estimates we are aware of._\n\n_We illustrate our approach with an application to London and find that no migrant group has a statistically significant long-term negative effect on employment. EU migrants, however, are found to have a significant positive impact, which may have important implications for the Brexit debate. Our approach opens up a new avenue of inquiry into subnational variations in the impacts of immigration on employment._\n\n![Impacts on employment, @Fingleton.2020](fig/Fingleton.PNG)\n\n\n## Estimation in R\n\nTo estimate spatial panel models in R, we can use the `splm` package of @Millo.2012.\n\nWe use a standard example with longitudinal data from the `plm` package here.\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-3_6ae5eebb3da3573ccc35483ad4d4175d'}\n\n```{.r .cell-code}\ndata(Produc, package = \"plm\")\ndata(usaww)\n\nhead(Produc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    state year region     pcap     hwy   water    util       pc\n1 ALABAMA 1970      6 15032.67 7325.80 1655.68 6051.20 35793.80\n2 ALABAMA 1971      6 15501.94 7525.94 1721.02 6254.98 37299.91\n3 ALABAMA 1972      6 15972.41 7765.42 1764.75 6442.23 38670.30\n4 ALABAMA 1973      6 16406.26 7907.66 1742.41 6756.19 40084.01\n5 ALABAMA 1974      6 16762.67 8025.52 1734.85 7002.29 42057.31\n6 ALABAMA 1975      6 17316.26 8158.23 1752.27 7405.76 43971.71\n    gsp    emp unemp\n1 28418 1010.5   4.7\n2 29375 1021.9   5.2\n3 31303 1072.3   4.7\n4 33430 1135.5   3.9\n5 33749 1169.8   5.5\n6 33604 1155.4   7.7\n```\n:::\n\n```{.r .cell-code}\nusaww[1:10, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            ALABAMA   ARIZONA ARKANSAS CALIFORNIA COLORADO\nALABAMA         0.0 0.0000000        0        0.0      0.0\nARIZONA         0.0 0.0000000        0        0.2      0.2\nARKANSAS        0.0 0.0000000        0        0.0      0.0\nCALIFORNIA      0.0 0.3333333        0        0.0      0.0\nCOLORADO        0.0 0.1428571        0        0.0      0.0\nCONNECTICUT     0.0 0.0000000        0        0.0      0.0\nDELAWARE        0.0 0.0000000        0        0.0      0.0\nFLORIDA         0.5 0.0000000        0        0.0      0.0\nGEORGIA         0.2 0.0000000        0        0.0      0.0\nIDAHO           0.0 0.0000000        0        0.0      0.0\n            CONNECTICUT DELAWARE FLORIDA GEORGIA IDAHO\nALABAMA               0        0    0.25    0.25     0\nARIZONA               0        0    0.00    0.00     0\nARKANSAS              0        0    0.00    0.00     0\nCALIFORNIA            0        0    0.00    0.00     0\nCOLORADO              0        0    0.00    0.00     0\nCONNECTICUT           0        0    0.00    0.00     0\nDELAWARE              0        0    0.00    0.00     0\nFLORIDA               0        0    0.00    0.50     0\nGEORGIA               0        0    0.20    0.00     0\nIDAHO                 0        0    0.00    0.00     0\n```\n:::\n:::\n\n\n\n`Produc` contains data on US States Production - a panel of 48 observations from 1970 to 1986. `usaww` is a spatial weights matrix of the 48 continental US States based on the queen contiguity relation.\n\nLet start with an FE SEM model, using function `spml()` for maximum likelihood estimation of static spatial panel models.\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-4_d6cddec8068ec3ad86a6dbd186459c1e'}\n\n```{.r .cell-code}\n# Gen listw object\nusalw <- mat2listw(usaww, style = \"W\")\n\n# Spec formula\nfm <- log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp\n\n### Esimate FE SEM model\nsemfe.mod <- spml(formula = fm, data = Produc, \n                  index = c(\"state\", \"year\"),  # ID column\n                  listw = usalw,          # listw\n                  model = \"within\",       # one of c(\"within\", \"random\", \"pooling\").\n                  effect = \"individual\",  # type of fixed effects\n                  lag = FALSE,            # spatila lg of Y\n                  spatial.error = \"b\",    # \"b\" (Baltagi), \"kkp\" (Kapoor, Kelejian and Prucha)\n                  method = \"eigen\",       # estimation method, for large data e.g. (\"spam\", \"Matrix\" or \"LU\")\n                  na.action = na.fail,    # handling of missings\n                  zero.policy = NULL)     # handling of missings\n\nsummary(semfe.mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial panel fixed effects error model\n \n\nCall:\nspml(formula = fm, data = Produc, index = c(\"state\", \"year\"), \n    listw = usalw, na.action = na.fail, model = \"within\", effect = \"individual\", \n    lag = FALSE, spatial.error = \"b\", method = \"eigen\", zero.policy = NULL)\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-0.1246945 -0.0237699 -0.0034993  0.0170886  0.1882224 \n\nSpatial error parameter:\n    Estimate Std. Error t-value  Pr(>|t|)    \nrho 0.557401   0.033075  16.853 < 2.2e-16 ***\n\nCoefficients:\n            Estimate Std. Error t-value Pr(>|t|)    \nlog(pcap)  0.0051438  0.0250109  0.2057  0.83705    \nlog(pc)    0.2053026  0.0231427  8.8712  < 2e-16 ***\nlog(emp)   0.7822540  0.0278057 28.1328  < 2e-16 ***\nunemp     -0.0022317  0.0010709 -2.0839  0.03717 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n\nA RE SAR model, by contrast, can be estimated using the following options:\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-5_f8539cfa8c2f73b6022c45a0d2edcac6'}\n\n```{.r .cell-code}\n### Estimate an RE SAR model\nsarre.mod <- spml(formula = fm, data = Produc, \n                  index = c(\"state\", \"year\"),  # ID column\n                  listw = usalw,          # listw\n                  model = \"random\",       # one of c(\"within\", \"random\", \"pooling\").\n                  effect = \"individual\",  # type of fixed effects\n                  lag = TRUE,             # spatila lg of Y\n                  spatial.error = \"none\", # \"b\" (Baltagi), \"kkp\" (Kapoor, Kelejian and Prucha)\n                  method = \"eigen\",       # estimation method, for large data e.g. (\"spam\", \"Matrix\" or \"LU\")\n                  na.action = na.fail,    # handling of missings\n                  zero.policy = NULL)     # handling of missings\n\nsummary(sarre.mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nML panel with spatial lag, random effects \n\nCall:\nspreml(formula = formula, data = data, index = index, w = listw2mat(listw), \n    w2 = listw2mat(listw2), lag = lag, errors = errors, cl = cl, \n    method = \"eigen\", zero.policy = ..2)\n\nResiduals:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.38    1.57    1.70    1.70    1.80    2.13 \n\nError variance parameters:\n    Estimate Std. Error t-value Pr(>|t|)  \nphi  21.3175     8.2929  2.5706  0.01015 *\n\nSpatial autoregressive coefficient:\n       Estimate Std. Error t-value  Pr(>|t|)    \nlambda 0.161615   0.029042  5.5648 2.625e-08 ***\n\nCoefficients:\n               Estimate  Std. Error t-value  Pr(>|t|)    \n(Intercept)  1.65814987  0.15071855 11.0016 < 2.2e-16 ***\nlog(pcap)    0.01294505  0.02493997  0.5190    0.6037    \nlog(pc)      0.22555375  0.02163422 10.4258 < 2.2e-16 ***\nlog(emp)     0.67081074  0.02642113 25.3892 < 2.2e-16 ***\nunemp       -0.00579716  0.00089175 -6.5009 7.984e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nNote that @Millo.2012 use a different notation, namely $\\lambda$ for lag dependence, and $\\rho$ for error dependence.... \n\nAgain, we have to use an additional step to get impacts for SAR-like models.\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-6_69e291173615a75426be8b038720d98b'}\n\n```{.r .cell-code}\n# Number of years\nT <- length(unique(Produc$year))\n\n# impacts\nsarre.mod.imp <- impacts(sarre.mod,\n                         listw = usalw,\n                         time = T)\nsummary(sarre.mod.imp)                         \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nImpact measures (lag, trace):\n                Direct     Indirect        Total\nlog(pcap)  0.013028574  0.002411880  0.015440454\nlog(pc)    0.227009032  0.042024438  0.269033470\nlog(emp)   0.675138835  0.124983264  0.800122098\nunemp     -0.005834562 -0.001080108 -0.006914669\n========================================================\nSimulation results ( variance matrix):\nDirect:\n\nIterations = 1:200\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 200 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n               Mean        SD  Naive SE Time-series SE\nlog(pcap)  0.011658 0.0236465 1.672e-03      1.720e-03\nlog(pc)    0.227501 0.0228336 1.615e-03      1.615e-03\nlog(emp)   0.675827 0.0281645 1.992e-03      1.992e-03\nunemp     -0.005769 0.0008477 5.994e-05      5.994e-05\n\n2. Quantiles for each variable:\n\n              2.5%       25%       50%       75%     97.5%\nlog(pcap) -0.03118 -0.006283  0.011397  0.027355  0.061668\nlog(pc)    0.18742  0.212753  0.226873  0.242803  0.269862\nlog(emp)   0.61796  0.657440  0.676889  0.694540  0.725427\nunemp     -0.00733 -0.006350 -0.005733 -0.005193 -0.004097\n\n========================================================\nIndirect:\n\nIterations = 1:200\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 200 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n               Mean        SD  Naive SE Time-series SE\nlog(pcap)  0.002102 0.0045926 3.247e-04      3.855e-04\nlog(pc)    0.042634 0.0104070 7.359e-04      7.359e-04\nlog(emp)   0.126764 0.0284976 2.015e-03      2.015e-03\nunemp     -0.001082 0.0002884 2.039e-05      2.039e-05\n\n2. Quantiles for each variable:\n\n               2.5%       25%       50%        75%      97.5%\nlog(pcap) -0.006666 -0.001006  0.002159  0.0049322  0.0106392\nlog(pc)    0.027374  0.034464  0.041686  0.0496898  0.0664886\nlog(emp)   0.082185  0.106125  0.125768  0.1458003  0.1862197\nunemp     -0.001707 -0.001273 -0.001038 -0.0008515 -0.0006065\n\n========================================================\nTotal:\n\nIterations = 1:200\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 200 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n               Mean       SD  Naive SE Time-series SE\nlog(pcap)  0.013760 0.028138 0.0019897      0.0020652\nlog(pc)    0.270136 0.028878 0.0020420      0.0020420\nlog(emp)   0.802591 0.045997 0.0032525      0.0032525\nunemp     -0.006851 0.001042 0.0000737      0.0000737\n\n2. Quantiles for each variable:\n\n               2.5%       25%       50%       75%     97.5%\nlog(pcap) -0.038181 -0.007366  0.013415  0.032512  0.071688\nlog(pc)    0.222491  0.250668  0.268715  0.287195  0.328755\nlog(emp)   0.704420  0.767314  0.802537  0.834909  0.887636\nunemp     -0.008932 -0.007627 -0.006796 -0.006152 -0.004803\n```\n:::\n:::\n\n\n\nThere is an alternative by using the package `SDPDmod` by Rozeta Simonovska ([see vignette](https://cran.r-project.org/web/packages/SDPDmod/vignettes/spatial_model.html)).\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-7_2fbf36260c66bf8ced8cab8dfedfad3d'}\n\n```{.r .cell-code}\n### FE SAR model\nsarfe.mod2 <- SDPDm(formula = fm, \n                    data = Produc, \n                    W = usaww,                 \n                    index = c(\"state\",\"year\"), # ID\n                    model = \"sar\",             # on of c(\"sar\",\"sdm\"),\n                    effect = \"individual\",     # FE structure\n                    dynamic = FALSE,           # time lags of the dependet variable\n                    LYtrans = TRUE)            # Lee-Yu transformation (bias correction)\n\nsummary(sarfe.mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsar panel model with individual fixed effects\n\nCall:\nSDPDm(formula = fm, data = Produc, W = usaww, index = c(\"state\", \n    \"year\"), model = \"sar\", effect = \"individual\", dynamic = FALSE, \n    LYtrans = TRUE)\n\nSpatial autoregressive coefficient:\n    Estimate Std. Error t-value  Pr(>|t|)    \nrho  0.27856    0.02400  11.607 < 2.2e-16 ***\n\nCoefficients:\n            Estimate Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.0468700  0.0262162 -1.7878    0.0738 .  \nlog(pc)    0.1859579  0.0237252  7.8380 4.578e-15 ***\nlog(emp)   0.6230728  0.0305554 20.3916 < 2.2e-16 ***\nunemp     -0.0044701  0.0008917 -5.0130 5.359e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nAnd subsequently, we can calculate the impacts of the model.\n\n\n::: {.cell hash='09_spatiotemporal_cache/html/unnamed-chunk-8_b26705aa6ddb6b5efd81bbd7becbbf95'}\n\n```{.r .cell-code}\n# Impats\nsarfe.mod2.imp <- impactsSDPDm(sarfe.mod2, \n                               NSIM = 200, # N simulations\n                               sd = 12345) # seed\n\nsummary(sarfe.mod2.imp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nImpact estimates for spatial (static) model\n========================================================\n\nDirect:\n             Estimate  Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.04548734  0.02599122 -1.7501    0.0801 .  \nlog(pc)    0.18811130  0.02383583  7.8920 2.975e-15 ***\nlog(emp)   0.63774644  0.03027064 21.0682 < 2.2e-16 ***\nunemp     -0.00459922  0.00089695 -5.1276 2.935e-07 ***\n\nIndirect:\n             Estimate  Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.01635496  0.00940025 -1.7398   0.08189 .  \nlog(pc)    0.06724002  0.00990916  6.7856 1.156e-11 ***\nlog(emp)   0.22817291  0.02236760 10.2010 < 2.2e-16 ***\nunemp     -0.00164883  0.00037103 -4.4440 8.831e-06 ***\n\nTotal:\n            Estimate Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.0618423  0.0352523 -1.7543   0.07938 .  \nlog(pc)    0.2553513  0.0313969  8.1330 4.188e-16 ***\nlog(emp)   0.8659194  0.0371907 23.2832 < 2.2e-16 ***\nunemp     -0.0062481  0.0012311 -5.0752 3.871e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nNote: I did not manage to estimate a dynamic panel model with `SDPDm`.\n\n## Example: Industrial facilities and municipal income\n\n@Ruttenauer.2021b: Environmental Inequality and Residential Sorting in Germany: A Spatial Time-Series Analysis of the Demographic Consequences of Industrial Sites. Demography, 58(6), 2243–2263. https://doi.org/10.1215/00703370-9563077\n\n![Spatial distribution of industrial facilities and income tax revenue per municipality for 2015.](fig/Figure1.png)\n\n\n![](fig/Table1.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}