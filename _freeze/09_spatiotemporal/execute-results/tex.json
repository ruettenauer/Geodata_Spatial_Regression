{
  "hash": "667fd2905333f02e155cf6c505717ab4",
  "result": {
    "markdown": "::: {.content-hidden unless-format=\"html\"}\n$$\n\\newcommand{\\tr}{\\mathrm{tr}}\n\\newcommand{\\rank}{\\mathrm{rank}}\n\\newcommand{\\plim}{\\operatornamewithlimits{plim}}\n\\newcommand{\\diag}{\\mathrm{diag}}\n\\newcommand{\\bm}[1]{\\boldsymbol{\\mathbf{#1}}}\n\\newcommand{\\Var}{\\mathrm{Var}}\n\\newcommand{\\Exp}{\\mathrm{E}}\n\\newcommand{\\Cov}{\\mathrm{Cov}}\n\\newcommand\\given[1][]{\\:#1\\vert\\:}\n\\newcommand{\\irow}[1]{%\n\\begin{pmatrix}#1\\end{pmatrix}\n}\n$$\n:::\n\n# Spatio-temporal models\n\n\n### Required packages {.unnumbered}\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-1_7febce3bf9c40ff9219907ffba555329'}\n\n```{.r .cell-code}\npkgs <- c(\"sf\", \"mapview\", \"spdep\", \"spatialreg\", \"tmap\", \"viridisLite\", \n          \"plm\", \"splm\", \"SDPDmod\")\nlapply(pkgs, require, character.only = TRUE)\n```\n:::\n\n\n\n### Session info {.unnumbered}\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-2_aca63ab3b4de1da8d6a22f6d5718f639'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United Kingdom.utf8 \n[2] LC_CTYPE=English_United Kingdom.utf8   \n[3] LC_MONETARY=English_United Kingdom.utf8\n[4] LC_NUMERIC=C                           \n[5] LC_TIME=English_United Kingdom.utf8    \n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] SDPDmod_0.0.5     splm_1.6-5        plm_2.6-4         viridisLite_0.4.2\n [5] tmap_3.3-4        spatialreg_1.3-4  Matrix_1.7-0      spdep_1.3-5      \n [9] spData_2.3.1      mapview_2.11.2    sf_1.0-16        \n\nloaded via a namespace (and not attached):\n [1] fastmap_1.2.0       leaflet_2.2.2       TH.data_1.1-2      \n [4] dotCall64_1.1-1     fixest_0.12.1       XML_3.99-0.16.1    \n [7] digest_0.6.35       lifecycle_1.0.4     dreamerr_1.4.0     \n[10] LearnBayes_2.15.1   survival_3.6-4      terra_1.7-78       \n[13] magrittr_2.0.3      compiler_4.4.1      rlang_1.1.4        \n[16] tools_4.4.1         collapse_2.0.14     knitr_1.47         \n[19] htmlwidgets_1.6.4   sp_2.1-4            classInt_0.4-10    \n[22] RColorBrewer_1.1-3  multcomp_1.4-25     abind_1.4-5        \n[25] KernSmooth_2.23-24  numDeriv_2016.8-1.1 leafsync_0.1.0     \n[28] grid_4.4.1          stats4_4.4.1        xtable_1.8-4       \n[31] lfe_3.0-0           e1071_1.7-14        leafem_0.2.3       \n[34] colorspace_2.1-0    scales_1.3.0        MASS_7.3-60.2      \n[37] dichromat_2.0-0.1   cli_3.6.2           mvtnorm_1.2-5      \n[40] rmarkdown_2.27      miscTools_0.6-28    generics_0.1.3     \n[43] RSpectra_0.16-1     rstudioapi_0.16.0   tmaptools_3.1-1    \n[46] bdsmatrix_1.3-7     DBI_1.2.3           proxy_0.4-27       \n[49] stringr_1.5.1       splines_4.4.1       stars_0.6-5        \n[52] parallel_4.4.1      s2_1.1.6            stringmagic_1.1.2  \n[55] base64enc_0.1-3     boot_1.3-30         sandwich_3.1-0     \n[58] jsonlite_1.8.8      Formula_1.2-5       crosstalk_1.2.1    \n[61] units_0.8-5         spam_2.10-0         glue_1.7.0         \n[64] lwgeom_0.2-14       codetools_0.2-20    stringi_1.8.4      \n[67] deldir_2.0-4        raster_3.6-26       lmtest_0.9-40      \n[70] munsell_0.5.1       htmltools_0.5.8.1   satellite_1.0.5    \n[73] R6_2.5.1            wk_0.9.1            maxLik_1.5-2.1     \n[76] Rdpack_2.6          evaluate_0.24.0     lattice_0.22-6     \n[79] rbibutils_2.2.16    png_0.1-8           class_7.3-22       \n[82] Rcpp_1.0.12         coda_0.19-4.1       nlme_3.1-164       \n[85] xfun_0.45           zoo_1.8-12         \n```\n:::\n:::\n\n\n\n\n@Elhorst.2014 provides a comprehensive introduction to spatial panel data methods. Article length introduction to spatial panel data models (FE and RE) can be found in @Elhorst.2012, @Millo.2012 and @Croissant.2018. @LeSage.2014b discusses Bayesian panel data methods.\n\nNote that we will only discuss some basics here, as the complete econometrics of these models and their estimation strategy become insanely complicated [@Lee.2010].\n\n## Static panel data models\n\nThe idea behind a static panel data with auto-regressive term is similar to the cross sectional situation [@Millo.2012].\n\n\n$$\n\t\t{\\bm y}= \\rho(\\bm I_T\\otimes {\\bm W_N}){\\bm y}+{\\bm X}{\\bm \\beta}+ {\\bm u}.\n$$\t\n\nwhere $\\otimes$ is the Kronecker product (block-wise multiplication).\n\n$$\n\\begin{split}\n\\underbrace{\\underbrace{\\bm I_T}_{T \\times T} \\otimes \\underbrace{\\bm W_N}_{N \\times N}}_{NT \\times NT}=\n\\begin{pmatrix}\n      1 & 0 & \\cdots & 0  \\\\\n      0 & 1 & \\cdots & 0  \\\\\n      \\vdots & \\vdots & \\ddots & \\vdots \\\\\n      0 & 0 & \\cdots & 1\n\\end{pmatrix}\n\\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right] =\\\\\n\\begin{pmatrix}\n      \\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right] & 0 & \\cdots & 0  \\\\\n      0 & \\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right] & \\cdots & 0  \\\\\n      \\vdots & \\vdots & \\ddots & \\vdots \\\\\n      0 & 0 & \\cdots & \\left[\\begin{array}{cccc}\nv_{1} w_{1} & v_{1} w_{2} & \\cdots & v_{1} w_{m} \\\\\nv_{2} w_{1} & v_{2} w_{2} & \\cdots & v_{2} w_{m} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nv_{n} w_{1} & v_{n} w_{2} & \\cdots & v_{n} w_{m}\n\\end{array}\\right]\n\\end{pmatrix}\n\\end{split}\n$$\n\nHere we model only spatial dependence within each cross-section and multiply the same spatial weights matrix $T$ times. Off block-diagonal elements are all zero. So there is no spatial dependence that goes across time.\n\nThe error term can be decomposed into two parts:\n\n$$\n\t\t{\\bm u}= (\\bm \\iota_T \\otimes {\\bm I_N})\\bm \\mu+ {\\bm \\nu},\n$$\n\nwhere $\\bm \\iota_T$ is a $T \\times 1$ vector of ones, ${\\bm I_N}$ an $N \\times N$ identity matrix, $\\bm \\mu$ is a vector of time-invariant individual specific effects (not spatially autocorrelated).\n\nWe could obviously extent the specification to allow for error correlation by specifying\n\n$$\n\t\t{\\bm \\nu}= \\lambda(\\bm I_T \\otimes {\\bm W_N})\\bm \\nu + {\\bm \\varepsilon}.\n$$\n\nThe individual effects can be treated as fixed or random.\n\n__Fixed Effects__\n\nIn the FE model, the individual specific effects are treated as fixed. If we re-write the equation above, we derive at the well-know fixed effects formula with an additional spatial autoregressive term: \n\n$$\n\t\t{y_{it}}= \\rho\\sum_{j=1}^Nw_{ij}y_{jt} + \\bm x_{it}\\bm\\beta + \\mu_i + \\nu_{it},\n$$\nwhere $\\mu_i$ denote the individual-specific fixed effects.\n\nAs with the standard spatial lag model, we cannot rely on the OLS estimator because of the simultaneity problem. The coefficients are thus estimated by maximum likelihood [@Elhorst.2014].\n\n__Random Effects__\n\nIn the RE model, the individual specific effects are treated as components of the error $\\mu \\sim \\mathrm{IID}(o, \\sigma_\\mu^2)$. The model can then be written as\n\n$$\n\\begin{split}\n\t\t{\\bm y}= \\rho(\\bm I_T\\otimes {\\bm W_N}){\\bm y}+{\\bm X}{\\bm \\beta}+ {\\bm u}, \\\\\n\t\t{\\bm u}= (\\bm \\iota_T \\otimes {\\bm I_N})\\bm \\mu+ [\\bm I_T \\otimes (\\bm I_N -  \\lambda{\\bm W_N})]^{-1} {\\bm \\varepsilon}.\n\\end{split}\t\t\n$$\t\n\nAs with the conventional random effects model, we make the strong assumption that the unobserved individual\neffects are uncorrelated with the covariates $\\bm X$ in the model.\n\n## Dynamic panel data models\n\nRelying on panel data and repeated measures over time, comes with an additional layer of dependence / autocorrelation between units. We have spatial dependence (with its three potential sources), and we have temporal/serial dependence within each unit over time.\n\nA general dynamic model would account for all sources of potential dependence, including combinations [@Elhorst.2012]. The most general model can be written as:\n\n$$\n\\begin{split}\n\t\t{\\bm y_t}=& \\tau \\bm y_{t-1} + \\rho(\\bm I_T\\otimes {\\bm W_N}){\\bm y}_t\n\t\t+ \\gamma(\\bm I_T\\otimes {\\bm W_N}){\\bm y_{t-1}}\\\\\n\t\t&~+ {\\bm X}{\\bm \\beta}+ (\\bm I_T\\otimes {\\bm W_N}){\\bm X}{\\bm \\theta}+ {\\bm u}_t,\\\\\n\t\t{\\bm u_t}=&  + (\\bm \\iota_T \\otimes {\\bm I_N})\\bm \\mu+ {\\bm \\nu_t},\\\\\n\t\t{\\bm \\nu_t}=& \\psi{\\bm \\nu}_{t-1} + \\lambda(\\bm I_T \\otimes {\\bm W_N})\\bm \\nu + {\\bm \\varepsilon},\n\\end{split}\t\t\n$$\t\n\nWhere ${\\bm X}$ could further contain time-lagged covariates. Compared to the static spatial panel model, we have introduced temporal dependency in the outcome $\\tau \\bm y_{t-1}$ and the spatially lagged outcome $\\gamma(\\bm I_T\\otimes {\\bm W_N}){\\bm y_{t-1}}$, and in the error term $\\psi{\\bm \\nu}_{t-1}$.\n\n### Impacts in spatial panel models\n\nNote that similar to the distinction between local and global spillovers, we now have to distinguish between short-term and long-term effects. A change in $\\bm X_t$ no influences focal $Y$ and neighbour's $Y$ but also contemporaneous $Y$ and future $Y$.\n\nWhile the short-term effects are the known impacts\n\n$$\n\\frac{\\partial {\\bm y}}{\\partial {\\bm x}_k} = ({\\bm I}-\\rho{\\bm W_{NT}})^{-1}\\left[\\beta_k+{\\bm W_{NT}}\\theta_k\\right].\n$$\n\nThe long-term impacts, by contrast, additionally account for the effect multiplying through time  \n\n$$\n\\frac{\\partial {\\bm y}}{\\partial {\\bm x}_k} = [(1-\\tau){\\bm I}-(\\rho+\\gamma){\\bm W_{NT}}]^{-1}\\left[\\beta_k+{\\bm W_{NT}}\\theta_k\\right].\n$$\n\nFor more information see @Elhorst.2012.\n\n![Summary impact measures in dynamic spatial panel models [@Elhorst.2012]](fig/Elhorst_panel.PNG)\n\n## Example: Local employment impacts of immigration\n\n@Fingleton.2020: Estimating the local employment impacts of immigration: A dynamic spatial panel model. Urban Studies, 57(13), 2646–2662. https://doi.org/10.1177/0042098019887916\n\n_This paper highlights a number of important gaps in the UK evidence base on the employment impacts of immigration, namely: (1) the lack of research on the local impacts of immigration – existing studies only estimate the impact for the country as a whole; (2) the absence of long-term estimates – research has focused on relatively short time spans – there are no estimates of the impact over several decades, for example; (3) the tendency to ignore spatial dependence of employment which can bias the results and distort inference – there are no robust spatial econometric estimates we are aware of._\n\n_We illustrate our approach with an application to London and find that no migrant group has a statistically significant long-term negative effect on employment. EU migrants, however, are found to have a significant positive impact, which may have important implications for the Brexit debate. Our approach opens up a new avenue of inquiry into subnational variations in the impacts of immigration on employment._\n\n![Impacts on employment, @Fingleton.2020](fig/Fingleton.PNG)\n\n\n## Estimation in R\n\nTo estimate spatial panel models in R, we can use the `splm` package of @Millo.2012.\n\nWe use a standard example with longitudinal data from the `plm` package here.\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-3_afdb44e1854c721b24748ebed57f93c3'}\n\n```{.r .cell-code}\ndata(Produc, package = \"plm\")\ndata(usaww)\n\nhead(Produc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    state year region     pcap     hwy   water    util       pc   gsp    emp\n1 ALABAMA 1970      6 15032.67 7325.80 1655.68 6051.20 35793.80 28418 1010.5\n2 ALABAMA 1971      6 15501.94 7525.94 1721.02 6254.98 37299.91 29375 1021.9\n3 ALABAMA 1972      6 15972.41 7765.42 1764.75 6442.23 38670.30 31303 1072.3\n4 ALABAMA 1973      6 16406.26 7907.66 1742.41 6756.19 40084.01 33430 1135.5\n5 ALABAMA 1974      6 16762.67 8025.52 1734.85 7002.29 42057.31 33749 1169.8\n6 ALABAMA 1975      6 17316.26 8158.23 1752.27 7405.76 43971.71 33604 1155.4\n  unemp\n1   4.7\n2   5.2\n3   4.7\n4   3.9\n5   5.5\n6   7.7\n```\n:::\n\n```{.r .cell-code}\nusaww[1:10, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            ALABAMA   ARIZONA ARKANSAS CALIFORNIA COLORADO CONNECTICUT DELAWARE\nALABAMA         0.0 0.0000000        0        0.0      0.0           0        0\nARIZONA         0.0 0.0000000        0        0.2      0.2           0        0\nARKANSAS        0.0 0.0000000        0        0.0      0.0           0        0\nCALIFORNIA      0.0 0.3333333        0        0.0      0.0           0        0\nCOLORADO        0.0 0.1428571        0        0.0      0.0           0        0\nCONNECTICUT     0.0 0.0000000        0        0.0      0.0           0        0\nDELAWARE        0.0 0.0000000        0        0.0      0.0           0        0\nFLORIDA         0.5 0.0000000        0        0.0      0.0           0        0\nGEORGIA         0.2 0.0000000        0        0.0      0.0           0        0\nIDAHO           0.0 0.0000000        0        0.0      0.0           0        0\n            FLORIDA GEORGIA IDAHO\nALABAMA        0.25    0.25     0\nARIZONA        0.00    0.00     0\nARKANSAS       0.00    0.00     0\nCALIFORNIA     0.00    0.00     0\nCOLORADO       0.00    0.00     0\nCONNECTICUT    0.00    0.00     0\nDELAWARE       0.00    0.00     0\nFLORIDA        0.00    0.50     0\nGEORGIA        0.20    0.00     0\nIDAHO          0.00    0.00     0\n```\n:::\n:::\n\n\n\n\n`Produc` contains data on US States Production - a panel of 48 observations from 1970 to 1986. `usaww` is a spatial weights matrix of the 48 continental US States based on the queen contiguity relation.\n\nLet start with an FE SEM model, using function `spml()` for maximum likelihood estimation of static spatial panel models.\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-4_863be5d3ecd321443a80cc5e6422a2cc'}\n\n```{.r .cell-code}\n# Gen listw object\nusalw <- mat2listw(usaww, style = \"W\")\n\n# Spec formula\nfm <- log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp\n\n### Esimate FE SEM model\nsemfe.mod <- spml(formula = fm, data = Produc, \n                  index = c(\"state\", \"year\"),  # ID column\n                  listw = usalw,          # listw\n                  model = \"within\",       # one of c(\"within\", \"random\", \"pooling\").\n                  effect = \"individual\",  # type of fixed effects\n                  lag = FALSE,            # spatila lg of Y\n                  spatial.error = \"b\",    # \"b\" (Baltagi), \"kkp\" (Kapoor, Kelejian and Prucha)\n                  method = \"eigen\",       # estimation method, for large data e.g. (\"spam\", \"Matrix\" or \"LU\")\n                  na.action = na.fail,    # handling of missings\n                  zero.policy = NULL)     # handling of missings\n\nsummary(semfe.mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial panel fixed effects error model\n \n\nCall:\nspml(formula = fm, data = Produc, index = c(\"state\", \"year\"), \n    listw = usalw, na.action = na.fail, model = \"within\", effect = \"individual\", \n    lag = FALSE, spatial.error = \"b\", method = \"eigen\", zero.policy = NULL)\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-0.1246945 -0.0237699 -0.0034993  0.0170886  0.1882224 \n\nSpatial error parameter:\n    Estimate Std. Error t-value  Pr(>|t|)    \nrho 0.557401   0.033075  16.853 < 2.2e-16 ***\n\nCoefficients:\n            Estimate Std. Error t-value Pr(>|t|)    \nlog(pcap)  0.0051438  0.0250109  0.2057  0.83705    \nlog(pc)    0.2053026  0.0231427  8.8712  < 2e-16 ***\nlog(emp)   0.7822540  0.0278057 28.1328  < 2e-16 ***\nunemp     -0.0022317  0.0010709 -2.0839  0.03717 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n\n\nA RE SAR model, by contrast, can be estimated using the following options:\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-5_11d13a0a1de8bf62ac4d88f78fe20a59'}\n\n```{.r .cell-code}\n### Estimate an RE SAR model\nsarre.mod <- spml(formula = fm, data = Produc, \n                  index = c(\"state\", \"year\"),  # ID column\n                  listw = usalw,          # listw\n                  model = \"random\",       # one of c(\"within\", \"random\", \"pooling\").\n                  effect = \"individual\",  # type of fixed effects\n                  lag = TRUE,             # spatila lg of Y\n                  spatial.error = \"none\", # \"b\" (Baltagi), \"kkp\" (Kapoor, Kelejian and Prucha)\n                  method = \"eigen\",       # estimation method, for large data e.g. (\"spam\", \"Matrix\" or \"LU\")\n                  na.action = na.fail,    # handling of missings\n                  zero.policy = NULL)     # handling of missings\n\nsummary(sarre.mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nML panel with spatial lag, random effects \n\nCall:\nspreml(formula = formula, data = data, index = index, w = listw2mat(listw), \n    w2 = listw2mat(listw2), lag = lag, errors = errors, cl = cl, \n    method = \"eigen\", zero.policy = ..2)\n\nResiduals:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.38    1.57    1.70    1.70    1.80    2.13 \n\nError variance parameters:\n    Estimate Std. Error t-value Pr(>|t|)  \nphi  21.3175     8.2929  2.5706  0.01015 *\n\nSpatial autoregressive coefficient:\n       Estimate Std. Error t-value  Pr(>|t|)    \nlambda 0.161615   0.029042  5.5648 2.625e-08 ***\n\nCoefficients:\n               Estimate  Std. Error t-value  Pr(>|t|)    \n(Intercept)  1.65814987  0.15071855 11.0016 < 2.2e-16 ***\nlog(pcap)    0.01294505  0.02493997  0.5190    0.6037    \nlog(pc)      0.22555375  0.02163422 10.4258 < 2.2e-16 ***\nlog(emp)     0.67081074  0.02642113 25.3892 < 2.2e-16 ***\nunemp       -0.00579716  0.00089175 -6.5009 7.984e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n\nNote that @Millo.2012 use a different notation, namely $\\lambda$ for lag dependence, and $\\rho$ for error dependence.... \n\nAgain, we have to use an additional step to get impacts for SAR-like models.\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-6_b583df1ce26d28f8bd5528bc4a5bc578'}\n\n```{.r .cell-code}\n# Number of years\nT <- length(unique(Produc$year))\n\n# impacts\nsarre.mod.imp <- impacts(sarre.mod,\n                         listw = usalw,\n                         time = T)\nsummary(sarre.mod.imp)                         \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nImpact measures (lag, trace):\n                Direct     Indirect        Total\nlog(pcap)  0.013028574  0.002411880  0.015440454\nlog(pc)    0.227009032  0.042024438  0.269033470\nlog(emp)   0.675138835  0.124983264  0.800122098\nunemp     -0.005834562 -0.001080108 -0.006914669\n========================================================\nSimulation results ( variance matrix):\nDirect:\n\nIterations = 1:200\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 200 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n               Mean        SD  Naive SE Time-series SE\nlog(pcap)  0.015148 0.0233842 1.654e-03      0.0014375\nlog(pc)    0.227589 0.0209440 1.481e-03      0.0013352\nlog(emp)   0.675362 0.0257468 1.821e-03      0.0018206\nunemp     -0.005867 0.0008737 6.178e-05      0.0000552\n\n2. Quantiles for each variable:\n\n               2.5%       25%       50%       75%     97.5%\nlog(pcap) -0.027689 -0.001279  0.015377  0.030439  0.064451\nlog(pc)    0.190018  0.213978  0.228329  0.239585  0.270045\nlog(emp)   0.615845  0.658976  0.678070  0.693001  0.718042\nunemp     -0.007506 -0.006454 -0.005874 -0.005316 -0.004153\n\n========================================================\nIndirect:\n\nIterations = 1:200\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 200 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n               Mean        SD  Naive SE Time-series SE\nlog(pcap)  0.002893 0.0046021 3.254e-04      2.814e-04\nlog(pc)    0.042586 0.0107716 7.617e-04      7.617e-04\nlog(emp)   0.126014 0.0279297 1.975e-03      1.975e-03\nunemp     -0.001100 0.0003142 2.222e-05      2.222e-05\n\n2. Quantiles for each variable:\n\n               2.5%        25%       50%        75%      97.5%\nlog(pcap) -0.005854 -0.0003247  0.002498  0.0055664  0.0116637\nlog(pc)    0.024515  0.0349812  0.041803  0.0488222  0.0628312\nlog(emp)   0.076839  0.1060017  0.126582  0.1457542  0.1732680\nunemp     -0.001771 -0.0012790 -0.001067 -0.0008751 -0.0005793\n\n========================================================\nTotal:\n\nIterations = 1:200\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 200 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n               Mean       SD  Naive SE Time-series SE\nlog(pcap)  0.018041 0.027857 1.970e-03      1.708e-03\nlog(pc)    0.270174 0.027756 1.963e-03      1.963e-03\nlog(emp)   0.801376 0.040368 2.854e-03      2.579e-03\nunemp     -0.006966 0.001097 7.758e-05      6.966e-05\n\n2. Quantiles for each variable:\n\n               2.5%       25%       50%      75%     97.5%\nlog(pcap) -0.033584 -0.001613  0.018430  0.03578  0.072426\nlog(pc)    0.220933  0.250828  0.268104  0.28661  0.331620\nlog(emp)   0.717083  0.772866  0.801234  0.82941  0.874786\nunemp     -0.009268 -0.007654 -0.006954 -0.00625 -0.004821\n```\n:::\n:::\n\n\n\n\nThere is an alternative by using the package `SDPDmod` by Rozeta Simonovska ([see vignette](https://cran.r-project.org/web/packages/SDPDmod/vignettes/spatial_model.html)).\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-7_36ccf0de22e7894a7637959e7da2cc7a'}\n\n```{.r .cell-code}\n### FE SAR model\nsarfe.mod2 <- SDPDm(formula = fm, \n                    data = Produc, \n                    W = usaww,                 \n                    index = c(\"state\",\"year\"), # ID\n                    model = \"sar\",             # on of c(\"sar\",\"sdm\"),\n                    effect = \"individual\",     # FE structure\n                    dynamic = FALSE,           # time lags of the dependet variable\n                    LYtrans = TRUE)            # Lee-Yu transformation (bias correction)\n\nsummary(sarfe.mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsar panel model with individual fixed effects\n\nCall:\nSDPDm(formula = fm, data = Produc, W = usaww, index = c(\"state\", \n    \"year\"), model = \"sar\", effect = \"individual\", dynamic = FALSE, \n    LYtrans = TRUE)\n\nSpatial autoregressive coefficient:\n    Estimate Std. Error t-value  Pr(>|t|)    \nrho  0.27856    0.02400  11.607 < 2.2e-16 ***\n\nCoefficients:\n            Estimate Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.0468700  0.0262162 -1.7878    0.0738 .  \nlog(pc)    0.1859579  0.0237252  7.8380 4.578e-15 ***\nlog(emp)   0.6230728  0.0305554 20.3916 < 2.2e-16 ***\nunemp     -0.0044701  0.0008917 -5.0130 5.359e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n\nAnd subsequently, we can calculate the impacts of the model.\n\n\n\n::: {.cell hash='09_spatiotemporal_cache/pdf/unnamed-chunk-8_7b17bd7919c7d0f6fd7610fed4178ed4'}\n\n```{.r .cell-code}\n# Impats\nsarfe.mod2.imp <- impactsSDPDm(sarfe.mod2, \n                               NSIM = 200, # N simulations\n                               sd = 12345) # seed\n\nsummary(sarfe.mod2.imp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nImpact estimates for spatial (static) model\n========================================================\n\nDirect:\n             Estimate  Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.04548734  0.02599122 -1.7501    0.0801 .  \nlog(pc)    0.18811130  0.02383583  7.8920 2.975e-15 ***\nlog(emp)   0.63774644  0.03027064 21.0682 < 2.2e-16 ***\nunemp     -0.00459922  0.00089695 -5.1276 2.935e-07 ***\n\nIndirect:\n             Estimate  Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.01635496  0.00940025 -1.7398   0.08189 .  \nlog(pc)    0.06724002  0.00990916  6.7856 1.156e-11 ***\nlog(emp)   0.22817291  0.02236760 10.2010 < 2.2e-16 ***\nunemp     -0.00164883  0.00037103 -4.4440 8.831e-06 ***\n\nTotal:\n            Estimate Std. Error t-value  Pr(>|t|)    \nlog(pcap) -0.0618423  0.0352523 -1.7543   0.07938 .  \nlog(pc)    0.2553513  0.0313969  8.1330 4.188e-16 ***\nlog(emp)   0.8659194  0.0371907 23.2832 < 2.2e-16 ***\nunemp     -0.0062481  0.0012311 -5.0752 3.871e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n\nNote: I did not manage to estimate a dynamic panel model with `SDPDm`.\n\n## Example: Industrial facilities and municipal income\n\n@Ruttenauer.2021b: Environmental Inequality and Residential Sorting in Germany: A Spatial Time-Series Analysis of the Demographic Consequences of Industrial Sites. Demography, 58(6), 2243–2263. https://doi.org/10.1215/00703370-9563077\n\n![Spatial distribution of industrial facilities and income tax revenue per municipality for 2015.](fig/Figure1.png)\n\n\n![](fig/Table1.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}